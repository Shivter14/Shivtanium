#import sys.bxf
set "initial_window_params=%~5"
if not defined secondary_window_params set "secondary_window_params=%~6"
set /a PID=PID, pl=15
for /l %%a in (0 1 9) do if "!PID:~%%a,1!" neq "" set /a pl+=1

set /a "closeButtonX=(w=win[!PID!.systemb_dialog]W=%~3)-4, bx=x+w-1, h=win[!PID!.systemb_dialog]H=%~4, x=win[!PID!.systemb_dialog]X=%~1, y=win[!PID!.systemb_dialog]Y=%~2, buttonW=%~9, buttonX=%~7, buttonY=%~8, buttonB=buttonX+buttonW-1" || >&2 echo=^^^^^^ At %~n0
if !win[%PID%.systemb_dialog]W! lss 16 set /a "closeButtonX=(win[!PID!.systemb_dialog]W=32)-4"
if !win[%PID%.systemb_dialog]H! lss 3 set "win[!PID!.systemb_dialog]H=7"
if !win[%PID%.systemb_dialog]W! gtr !sys.modeW! set /a "x=win[!PID!.systemb_dialog]X=1, w=bx=win[!PID!,systemb_dialog]W=modeW, buttonW=%~9, buttonX=%~7, buttonB=buttonX+buttonW-1" || >&2 echo=^^^^^^ At %~n0
if !win[%PID%.systemb_dialog]Y! geq !sys.modeH! set /a "win[!PID!.systemb_dialog]Y=sys.modeH-1, buttonY=%~8" || >&2 echo=^^^^^^ At %~n0
if !bx! gtr !sys.modeW! set /a "x=win[!PID!.systemb_dialog]X=(bx=sys.modeW)-w+1, buttonW=%~9, buttonX=%~7, buttonB=buttonX+buttonW-1" || >&2 echo=^^^^^^ At %~n0

shift /1
shift /1
set "buttonName=%~8"
set "embed=%~9"
shift /1
echo=¤CW	!PID!.systemb_dialog	!win[%PID%.systemb_dialog]X!	!win[%PID%.systemb_dialog]Y!	!win[%PID%.systemb_dialog]W!	!win[%PID%.systemb_dialog]H!	!initial_window_params!
echo=¤MW	!PID!.systemb_dialog	!secondary_window_params!	o!buttonY!=%\e%[!buttonX!C!buttonName!
if defined extended_window_params echo=¤MW	!PID!.systemb_dialog	!extended_window_params!
@sys.call registerWindow	!PID!	!PID!.systemb_dialog	!win[%PID%.systemb_dialog]X!	!win[%PID%.systemb_dialog]Y!	!win[%PID%.systemb_dialog]W!	!win[%PID%.systemb_dialog]H!
set "focusedWindow=!PID!.systemb_dialog"
for /l %%# in () do (
	@sys.pullEvents
	@sys.onEvent click=1
		if "!focusedWindow!"=="!PID!.systemb_dialog" (
			set /a "relativeMouseX=mouseXpos-win[!PID!.systemb_dialog]X, relativeMouseY=mouseYpos-win[!PID!.systemb_dialog]Y"
			if /I "%~9" neq "False" if "!relativeMouseY!"=="0" if !relativeMouseX! geq !closeButtonX! if /I "!embed!"=="True" (
				echo=¤DW	!PID!.systemb_dialog
				@sys.call unRegisterWindow	!PID!.systemb_dialog
				exit 0
			) else (
				@sys.exit
			)
			if "!relativeMouseY!"=="!buttonY!" if !relativeMouseX! geq !buttonX! if !relativeMouseX! leq !buttonB! (
				echo=¤MW	!PID!.systemb_dialog	o!buttonY!=%\e%[!buttonX!C%\e%[7m!buttonName!%\e%[27m
			)
		)
	@sys.onEvent click=0
		if "!focusedWindow!"=="!PID!.systemb_dialog" (
			set /a "relativeMouseX=mouseXpos-win[!PID!.systemb_dialog]X, relativeMouseY=mouseYpos-win[!PID!.systemb_dialog]Y"
			if "!relativeMouseY!"=="!buttonY!" if !relativeMouseX! geq !buttonX! if !relativeMouseX! leq !buttonB! if /I "!embed!"=="True" (
				echo=¤DW	!PID!.systemb_dialog
				@sys.call unRegisterWindow	!PID!.systemb_dialog
				exit 0
			) else (
				@sys.exit
			)
			echo=¤MW	!PID!.systemb_dialog	o!buttonY!=%\e%[!buttonX!C!buttonName!
		)
	@sys.onEventRaw "!kernelOut:~0,%pl%!"=="focusedWindow=!PID!."
		set "!kernelOut!" >nul 2>&1
		if "!focusedWindow!" neq "!PID!.systemb_dialog" (
			@sys.call unRegisterWindow	!PID!.systemb_dialog
			@sys.call registerWindow	!PID!	!PID!.systemb_dialog	!win[%PID%.systemb_dialog]X!	!win[%PID%.systemb_dialog]Y!	!win[%PID%.systemb_dialog]W!	!win[%PID%.systemb_dialog]H!
			echo=¤FOCUS	!PID!.systemb_dialog
		)
	@sys.handleStdEvents
)
